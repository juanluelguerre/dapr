version: '3.8'

services:
  website:
    image: "alltogether.website"
    build:
      context: ./WebSite
      dockerfile: WebSite/Dockerfile
    ports:
      - 5000:80
      - 5001:443      
    depends_on:
      - redis
      - placement   
    environment: 
      # - ASPNETCORE_ENVIRONMENT=Development # <- The 'Urls' param inside appsettings.Development.json cause conflict to take care and use differnts appsettings/environments configuration. Default value is Production.
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx     
    volumes:      
      - ~/.aspnet/https:/https:ro
    networks:
      - alltogether   
        
  website-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", "-app-id", "website", "-app-port", "443", "-dapr-http-port", "3500", "-dapr-grpc-port", "50001", "-app-ssl", "-components-path", "/components", "-config", "/components/config.yaml"]    
    depends_on: 
      - website
    volumes:
      - ./dapr/components/docker-compose:/components
    network_mode: "service:website" 

  ######################################################

  counterservice:
    image: "alltogether.counterservice"
    build:
      context: ./CounterService
      dockerfile: CounterService/Dockerfile
    ports:
      - 5002:80
      - 5004:443     
    depends_on:
      - redis
      - placement
    environment: 
      # - ASPNETCORE_ENVIRONMENT=Development # <- The 'Urls' param inside appsettings.Development.json cause conflict to take care and use differnts appsettings/environments configuration. Default value is Production.
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5004
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx    
    volumes:      
      - ~/.aspnet/https:/https:ro
    networks:
      - alltogether   

  counterservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", "-app-id", "counterservice", "-app-port", "443", "-dapr-http-port", "3502", "-dapr-grpc-port", "50002", "-app-ssl", "-components-path", "/components", "-config", "/components/config.yaml"] 
    depends_on:       
      - counterservice
    volumes:
      - ./dapr/components/docker-compose:/components
    network_mode: "service:counterservice"
  
  ######################################################

  weatherservice:
    image: "alltogether.weatherservice"
    build:
      context: ./WeatherService
      dockerfile: WeatherService/Dockerfile
    ports:
      - 5003:80
      - 5005:443      
    depends_on:      
      - placement    
    environment: 
      # - ASPNETCORE_ENVIRONMENT=Development # <- The 'Urls' param inside appsettings.Development.json cause conflict to take care and use differnts appsettings/environments configuration. Default value is Production.
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5005
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx     
    volumes:      
      - ~/.aspnet/https:/https:ro
    networks:
      - alltogether     
       
  weatherservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", "-app-id", "weatherservice", "-app-port", "443", "-dapr-http-port", "3503", "-dapr-grpc-port", "50003", "-app-ssl", "-config", "/components/config.yaml"]
    depends_on: 
      - weatherservice
    volumes:
      - ./dapr/components/docker-compose:/components
    network_mode: "service:weatherservice"   

  # Redis state store  
  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - 6380:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - alltogether

  # Observavility
  zipkin:
    image: openzipkin/zipkin
    # hostname: zipkin
    container_name: zipkin
    ports:      
      - 9413:9411
    networks:
      - alltogether

  # --- Not used at the momen --- 

  # Observavility
  # jaeger:
  #   image: jaegertracing/all-in-one:1.25
  #   # hostname: jaeger
  #   container_name: jaeger
  #   ports:
  #     - 16686:16686
  #     # - 9412:9412
  #   environment:       
  #     - COLLECTOR_ZIPKIN_HOST_PORT=9411 # <- enabled zipkin to process headers v2: /api/v2/spans. v2 specified inside config.yaml
  #     # - COLLECTOR_ZIPKIN_HTTP_PORT=9411
  #   networks:
  #     - alltogether

  ########################################################
  # Dapr placement service. Only when Actors are involved
  ########################################################
  # Uncomment this placement service and
  # include arguments: "-placement-host-address", "placement:50006",  in "./dprd" command for each sidecar when need it.
  # ------------------------------------------------------
  # placement:
  #   image: "daprio/dapr:latest"
  #   command: ["./placement", "-port", "50006"]
  #   ports:
  #     - 50006:50006
  #   networks:
  #     - alltogether
    

  # # https://github.com/dapr/dashboard/issues/38
  # dashboard:
  #   image: daprio/dashboard:latest
  #   # hostname: dashboard
  #   container_name: dashboard
  #   ports:
  #     - 8080:8080

networks:
  alltogether:
